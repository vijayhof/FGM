//
//  BIDSingleComponentPickerViewController.m
//  Pickers
//
//  Created by Dave Mark on 8/17/11.
//  Copyright (c) 2011 Dave Mark. All rights reserved.
//
#import "Constants.h"
#import "AddComponentController.h"
#import "MathUILabelObject.h"
#import "MathUIDataObject.h"
#import "Utility.h"
#import "MathUtility.h"

@implementation AddComponentController

//@synthesize stepper;
@synthesize  r1c1, r2c1, r3c1, r4c1, r5c1, r6c1, r7c1, r8c1, r9c1, r10c1;
@synthesize  r1op, r2op, r3op, r4op, r5op, r6op, r7op, r8op, r9op, r10op;
@synthesize  r1c2, r2c2, r3c2, r4c2, r5c2, r6c2, r7c2, r8c2, r9c2, r10c2;
@synthesize  r1c3, r2c3, r3c3, r4c3, r5c3, r6c3, r7c3, r8c3, r9c3, r10c3;
@synthesize  mathUiLabelObject;

- (IBAction)shufflePressed {
//    NSInteger row = [singlePicker selectedRowInComponent:0];
//    NSString *selected = [pickerData objectAtIndex:row];
//    NSString *title = [[NSString alloc] initWithFormat:
//                       @"You selected %@!", selected];
//    UIAlertView *alert = [[UIAlertView alloc] initWithTitle:title
//                                                    message:@"Thank you for choosing."
//                                                   delegate:nil
//                                          cancelButtonTitle:@"You're Welcome"
//                                          otherButtonTitles:nil];
//    [alert show];
}

- (IBAction)stepperPressed:(UIStepper *)sender {
    double value = [sender value];
    D2Log(@"d2");

    
    [r1c1 setText:[NSString stringWithFormat:@"%d", (int)value]];
    [r2c1 setText:[NSString stringWithFormat:@"%d", (int)value]];
    [r3c1 setText:[NSString stringWithFormat:@"%d", (int)value]];
    [r4c1 setText:[NSString stringWithFormat:@"%d", (int)value]];
    [r5c1 setText:[NSString stringWithFormat:@"%d", (int)value]];
    [r6c1 setText:[NSString stringWithFormat:@"%d", (int)value]];
    [r7c1 setText:[NSString stringWithFormat:@"%d", (int)value]];
    [r8c1 setText:[NSString stringWithFormat:@"%d", (int)value]];
    [r9c1 setText:[NSString stringWithFormat:@"%d", (int)value]];
    [r10c1 setText:[NSString stringWithFormat:@"%d", (int)value]];
}

- (id)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil
{
    self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil];
    if (self) {
        // Custom initialization
    }
    return self;
}

- (void)bindData:(MathUIDataObject*) dataObj
{
    D2Log(@"d14");

    NSString* tmpStr = nil;
    int maxSize = [Utility getMaxNumberArraySize];
    D2Log(@"d14.1 %d", maxSize);

    for(int i = 0; i < maxSize; i++)
    {
        D2Log(@"d15");

        tmpStr = [[dataObj.firstNumberArr objectAtIndex:i] stringValue];
        [[mathUiLabelObject.firstNumberLabelArr objectAtIndex:i] setText: tmpStr];
        tmpStr = [[dataObj.secondNumberArr objectAtIndex:i] stringValue];
        [[mathUiLabelObject.secondNumberLabelArr objectAtIndex:i] setText: tmpStr];
        tmpStr = [MathUtility getOperandSymbol:[dataObj.operandArr objectAtIndex:i]];
        [[mathUiLabelObject.operandLabelArr objectAtIndex:i] setText: tmpStr];
        tmpStr = [[dataObj.resultNumberArr objectAtIndex:i] stringValue];
        [[mathUiLabelObject.resultNumberLabelArr objectAtIndex:i] setText: tmpStr];
        D2Log(@"data=%@", tmpStr);
    }
}

- (void)didReceiveMemoryWarning
{
    // Releases the view if it doesn't have a superview.
    [super didReceiveMemoryWarning];
    
    // Release any cached data, images, etc that aren't in use.
}

#pragma mark - View lifecycle

- (void)viewDidLoad
{
    [super viewDidLoad];
    D2Log(@"d11");

    
    mathUiLabelObject = [[MathUILabelObject alloc] init];
    mathUiLabelObject.firstNumberLabelArr  = [[NSMutableArray alloc] initWithObjects:r1c1, r2c1, r3c1, r4c1, r5c1, r6c1, r7c1, r8c1, r9c1, r10c1, nil];
    //mathUiLabelObject.firstNumberLabelArr  = [[NSMutableArray alloc] initWithCapacity:maxSize];
    mathUiLabelObject.secondNumberLabelArr = [[NSMutableArray alloc] initWithObjects:r1c2, r2c2, r3c2, r4c2, r5c2, r6c2, r7c2, r8c2, r9c2, r10c2, nil];
    //mathUiLabelObject.secondNumberLabelArr = [[NSMutableArray alloc] initWithCapacity:maxSize];
    mathUiLabelObject.operandLabelArr      = [[NSMutableArray alloc] initWithObjects:r1op, r2op, r3op, r4op, r5op, r6op, r7op, r8op, r9op, r10op, nil];
    //mathUiLabelObject.operandLabelArr      = [[NSMutableArray alloc] initWithCapacity:maxSize];
    mathUiLabelObject.resultNumberLabelArr = [[NSMutableArray alloc] initWithObjects:r1c3, r2c3, r3c3, r4c3, r5c3, r6c3, r7c3, r8c3, r9c3, r10c3, nil];
    //mathUiLabelObject.resultNumberLabelArr = [[NSMutableArray alloc] initWithCapacity:maxSize];
    // TODO - use ivar or similar approach to initialize label array. using obj c introspection / reflection method
    //for(int i = 0; i < maxSize; i++)
    //{
    //switch(i)
    //{
    //case 0:
    //mathUiLabelObject.firstNumberLabelArr[i] = r1c1;
    //mathUiLabelObject.secondNumberLabelArr[i] = r1c2;
    //mathUiLabelObject.operandLabelArr[i] = r1c3;
    //}
    //}
    
    D2Log(@"d12");

    [self bindData:[MathUtility getMathUIObjectArray]];
    D2Log(@"d13");

}

- (void)viewDidUnload
{
    [super viewDidUnload];
    // Release any retained subviews of the main view.
    // e.g. self.myOutlet = nil;
//    self.singlePicker = nil;
//    self.pickerData = nil;
}

- (BOOL)shouldAutorotateToInterfaceOrientation:(UIInterfaceOrientation)interfaceOrientation
{
    // Return YES for supported orientations
    return (interfaceOrientation == UIInterfaceOrientationPortrait);
}
@end
